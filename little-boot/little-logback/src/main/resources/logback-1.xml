<configuration>
  <!-- 默认的控制台日志输出，一般生产环境都是后台启动，这个没太大作用 -->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <Pattern>%d{HH:mm:ss.SSS} %-5level %logger{80} - %msg%n</Pattern>
    </encoder>
  </appender>

  <root level="info">
    <appender-ref ref="STDOUT"/>
  </root>
</configuration>

  <!--
  contextName
    每个logger都关联到logger上下文，默认上下文名称为“default”。但可以使用contextName标签设置成其他名字，用于区分不同应用程序的记录
  property
    用来定义变量值的标签，property标签有两个属性，name和value；其中name的值是变量的名称，value的值时变量定义的值。通过property定义的值会被插入到logger上下文中。定义变量后，可以使“${name}”来使用变量。如上面的xml所示。
  logger
    用来设置某一个包或者具体的某一个类的日志打印级别以及指定appender。
  root
    根logger，也是一种logger，且只有一个level属性
  appender
    负责写日志的组件，下面会细说
  filter
    filter其实是appender里面的子元素。它作为过滤器存在，执行一个过滤器会有返回DENY，NEUTRAL，ACCEPT三个枚举值中的一个。
  DENY：日志将立即被抛弃不再经过其他过滤器
  NEUTRAL：有序列表里的下个过滤器过接着处理日志
  ACCEPT：日志会被立即处理，不再经过剩余过滤器-->
